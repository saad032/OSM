@*@model IdentitySample.Models.RegisterViewModel*@
@model  OSM.Models.IdentityModels.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mainbar">

    <!-- Page heading -->
    <div class="page-head">
        <h2 class="pull-left">Register New User</h2>

        <div class="clearfix"></div>


        <div class="clearfix"></div>

    </div>
    <!-- Page heading ends -->
    <!-- Matter -->

    <div class="matter">
        <div class="container">
            <!-- Dashboard Graph starts -->
            <div class="row">
                <div class="col-md-12">
                    <div class="widget">
                        <div class="widget-head">
                            <div class="pull-left"> User Info</div>
                            <div class="widget-icons pull-right">
                                <a href="#" class="wminimize"><i class="fa fa-chevron-up"></i></a>

                                <a href="#" class="wclose"><i class="fa fa-times"></i></a>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        <div class="widget-content">
                            <div class="padd">

                                @using (Html.BeginForm("RegisterLVAddEdit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                                    @Html.HiddenFor(m => m.UserId)
                                    <div class="form-group">
                                        <label class="col-lg-2 control-label textAlignLeft">First Name</label>
                                        <div class="col-lg-10">
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control ltr", placeholder = "Enter First Name", @readonly = (@Model == null || string.IsNullOrEmpty(@Model.UserId)) ? false : true })
                                            @Html.ValidationMessageFor(m => m.FirstName)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-lg-2 control-label textAlignLeft">Last Name</label>
                                        <div class="col-lg-10">
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control ltr", placeholder = "Enter Last Name", @readonly = (@Model == null || string.IsNullOrEmpty(@Model.UserId)) ? false : true })
                                            @Html.ValidationMessageFor(m => m.LastName)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-lg-2 control-label textAlignLeft">Email</label>
                                        <div class="col-lg-10">
                                            @Html.TextBoxFor(m => m.Email, new { @dir = "ltr", @class = "form-control textAlignLeft", placeholder = "Enter Email", @readonly = (@Model == null || string.IsNullOrEmpty(@Model.UserId)) ? false : true })
                                            @Html.ValidationMessageFor(m => m.Email)
                                        </div>
                                    </div>
                                    <div class="form-group" style="display: @(string.IsNullOrEmpty(@Model.UserId) ? "block" : "none")">
                                        <label class="col-lg-2 control-label textAlignLeft">Confirm Email</label>
                                        <div class="col-lg-10">
                                            @Html.TextBoxFor(m => m.ConfirmEmail, new { @dir = "ltr", @class = "form-control textAlignLeft", placeholder = "Confirm Email" })
                                            @Html.ValidationMessageFor(m => m.ConfirmEmail)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-lg-2 control-label textAlignLeft">Role</label>
                                        <div class="col-lg-10" dir="ltr">
                                            @Html.DropDownListFor(x => x.SelectedRole, new SelectList(Model.Roles, "Id", "Name"), new { @class = "form-control textAlignLeft" })
                                        </div>
                                    </div>
                                    <div class="form-group" style="display: @(string.IsNullOrEmpty(@Model.UserId) ? "block" : "none")">
                                        <label class="col-lg-2 control-label textAlignLeft">Password</label>
                                        <div class="col-lg-10">
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control ltr", placeholder = "Password" })
                                            @Html.ValidationMessageFor(m => m.Password)
                                        </div>
                                    </div>
                                    <div class="form-group" style="display: @(string.IsNullOrEmpty(@Model.UserId) ? "block" : "none")">
                                        <label class="col-lg-2 control-label textAlignLeft">Confirm Password</label>
                                        <div class="col-lg-10">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control ltr", placeholder = "Confirm Password" })
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-lg-6">
                                            <button id="signupuser" type="submit" class="btn btn-success btn-block FontSize16">Save</button>
                                        </div>
                                        <a href="RegisterLV">
                                            <div class="col-lg-6">
                                                <button id="signupuser" type="button" class="btn btn-primary btn-block FontSize16">Cancel</button>
                                            </div>
                                        </a>
                                    </div>
                                }

                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- Matter ends -->

</div>
<script>
    $(function () {

        $("[readonly='false']").removeAttr("readonly");

    });
</script>
